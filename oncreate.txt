oncreate{

//CHECK WHETHER PERMISSIONS ARE ALREADY GRANTED
        if((ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) ==PackageManager.PERMISSION_GRANTED) && (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE) ==PackageManager.PERMISSION_GRANTED) )
        {
            Toast.makeText(this,"Permissions are already granted",Toast.LENGTH_SHORT).show();
        }
        //SEND REQUEST FOR PERMISSIONS
        else
        {
                ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA,Manifest.permission.READ_EXTERNAL_STORAGE}, 1);
        }

}

@Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults)
    {
        if(requestCode==1)
        {
            if(grantResults.length==0 || (grantResults[0] +grantResults[1]!=PackageManager.PERMISSION_GRANTED))
            {
                Toast.makeText(this,"Permission Denied",Toast.LENGTH_SHORT).show();// PERMISSIONS ARE DENIED

                if((ActivityCompat.shouldShowRequestPermissionRationale(MainActivity.this,Manifest.permission.CAMERA)) && (ActivityCompat.shouldShowRequestPermissionRationale(this,Manifest.permission.READ_EXTERNAL_STORAGE)))
                {
                            new AlertDialog.Builder(this)
                            .setTitle("Permission Needed")
                            .setMessage("Camera and Media permissions are required to run this app")
                            .setPositiveButton("ok", new DialogInterface.OnClickListener()
                            {
                                public void onClick(DialogInterface dialog, int which)
                                {
                                    ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.CAMERA,Manifest.permission.READ_EXTERNAL_STORAGE}, 1);
                                }
                            })
                            .setNegativeButton("Cancel", new DialogInterface.OnClickListener()
                            {
                                @Override
                                public void onClick(DialogInterface dialog, int which) {
                                    dialog.dismiss();
                                    finish();
                                }
                            })
                            .create().show();
                }
                else//DIRECT REQUESTING THE PERMISSION WITHOUT EXPLANATION
                {
                    ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA,Manifest.permission.READ_EXTERNAL_STORAGE}, 1);
                }
            }
            else//PERMISSION GRANTED
            {
                Toast.makeText(this,"Permissions Granted",Toast.LENGTH_SHORT).show();

            }
        }
    }